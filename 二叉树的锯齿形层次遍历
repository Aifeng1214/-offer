http://www.lintcode.com/zh-cn/problem/binary-tree-zigzag-level-order-traversal/

//思路：
1.一个deque记录依次需要输出的Node
2.一个n记录deque内的size，即为一层的Node数量
3.while循环里面逐个打印，如果有左右字数分别入队，最后根据flag判断是否需要reverse
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode *root) {
        vector<vector<int>>res;
        if(!root) return res;
        deque<TreeNode*> dq;
        dq.push_back(root);
        int flag=0;
        while(!dq.empty()){
            int n=dq.size();
            vector<int> level;
            while(n--){
                TreeNode* cur=dq.front();
                dq.pop_front();
                level.push_back(cur->val);
                if(cur->left) dq.push_back(cur->left);
                if(cur->right) dq.push_back(cur->right);
            }
            if(flag&1) reverse(level.begin(),level.end());
            res.push_back(level);
            flag++;
        }
        return res;
    }
};
