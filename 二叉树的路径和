http://www.lintcode.com/zh-cn/problem/binary-tree-path-sum/

//思路：递归解决。递归的终止条件为root->val==target && root->left==NULL && root->right==NULL
class Solution {
public:
    vector<vector<int>> binaryTreePathSum(TreeNode *root, int target) {
        if(root)
            helper(root,target);
        return res;
    }
    void helper(TreeNode *root, int target){
        tmp.push_back(root->val);
        if(target-root->val==0 && !root->left && !root->right){
            res.push_back(tmp);
        }else{
            if(root->left) helper(root->left,target-root->val);
            if(root->right) helper(root->right,target-root->val);
        }
        tmp.pop_back(); //此处很重要，保证在将tmp放入res之后，每一层即删除一个tmp尾部的数据
    }
private:
    vector<vector<int>> res;
    vector<int> tmp;
};
