http://www.lintcode.com/zh-cn/problem/linked-list-cycle/

//思路
1.快慢指针，快指针一次2步慢指针一次1步
2.如果有环 快慢指针必然会相遇
3.如果没环，快指针先到达终点NULL或者终点前一格
class Solution {
public:
    bool hasCycle(ListNode *head) {
        if(head==NULL || head->next==NULL) return false;
        ListNode *slow=head, *fast=head;
        while(fast->next && fast->next->next){
            slow=slow->next;
            fast=fast->next->next;
            if(slow==fast)
                return true;
        }
        return false;
    }
};
